{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\projects\\\\react-projects\\\\chargebee-master\\\\src\\\\components\\\\message\\\\Message.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, Hidden, IconButton, makeStyles, TextField } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport hello from '../../images/hello.jpg';\nimport Loader from '../Loader/Loader';\nimport './Message.css';\nimport axios from '../../axios.js';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Link } from 'react-router-dom';\n\nfunction Message() {\n  _s();\n\n  const [loader, setLoader] = useState(false);\n  const [success, setSuccess] = useState(null);\n  const [error, setError] = useState(null);\n  const textInput = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const input = textInput.current.value;\n\n    if (!input) {\n      setError(\"Require Input .Cant send empty message\");\n      setTimeout(() => {\n        setError(null);\n      }, 1500);\n      return;\n    }\n\n    setLoader(true);\n\n    (async () => {\n      try {\n        const msg = await axios.post(\"/whatsApp\", {\n          data: input\n        });\n        console.log(msg.data);\n        textInput.current.value = \"\";\n        setLoader(false);\n        setSuccess(\"Message sent Successfully\");\n        setTimeout(() => {\n          setSuccess(null);\n        }, 1500);\n      } catch (error) {\n        setLoader(false);\n        console.log(error);\n        setError(error.data);\n        setTimeout(() => {\n          setError(null);\n        }, 1500);\n      }\n    })();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message__back\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        component: Link,\n        to: '/',\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      style: {\n        height: '100vh !important'\n      },\n      className: \"message__container\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message__loader\",\n            children: [loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"message__success\",\n              children: success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"message__error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              inputRef: textInput,\n              multiline: true,\n              label: \"Message\",\n              rowsMax: 6,\n              fullWidth: true,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"message__button\",\n              children: \"send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hello\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Message, \"o7JzLHhJ7pR0kZhfsOcs9Jxocko=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/hp/projects/react-projects/chargebee-master/src/components/message/Message.js"],"names":["Button","Grid","Hidden","IconButton","makeStyles","TextField","React","useRef","useState","hello","Loader","axios","HomeIcon","ArrowBackIcon","Link","Message","loader","setLoader","success","setSuccess","error","setError","textInput","submitHandler","event","preventDefault","input","current","value","setTimeout","msg","post","data","console","log","height"],"mappings":"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","sourcesContent":["import { Button, Grid, Hidden, IconButton, makeStyles, TextField } from '@material-ui/core'\nimport React, { useRef, useState } from 'react'\nimport hello from '../../images/hello.jpg'\nimport Loader from '../Loader/Loader'\nimport './Message.css'\nimport  axios from '../../axios.js'\nimport HomeIcon from '@material-ui/icons/Home';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Link } from 'react-router-dom'\n\n\nfunction Message() {\n    \n    const [loader,setLoader] = useState(false);\n    const [success,setSuccess] = useState(null);\n    const [error,setError] = useState(null);\n    const textInput = useRef(null)\n    \n    const submitHandler = (event) => {\n        event.preventDefault();\n        const input = textInput.current.value;\n        \n        if(!input) {\n            setError(\"Require Input .Cant send empty message\");\n            setTimeout(() => {setError(null)},1500);\n            return\n        }\n        setLoader(true);\n        (async () => {\n            \n            try {\n               const msg= await axios.post(\"/whatsApp\", {\n                    data: input,\n                  });\n                  console.log(msg.data)\n                  textInput.current.value=\"\"\n                  setLoader(false);\n                  setSuccess(\"Message sent Successfully\");\n                  setTimeout(() => {setSuccess(null)},1500);\n            }\n            catch(error) {\n                setLoader(false);\n                console.log(error)\n                setError(error.data);\n                setTimeout(() => {setError(null)},1500);\n            }\n           \n           \n          })();\n        \n    }\n    \n    return (\n        <div className=\"message\">\n            <div className=\"message__back\">\n                <IconButton  component={Link} \n                    to={'/'} >\n                    <ArrowBackIcon />\n                </IconButton>\n            </div>\n            <Grid container alignItems=\"center\" style={{height: '100vh !important'}} className=\"message__container\">\n                <Grid item xs={12} md={6}  >   \n                <div  >\n                <div className=\"message__loader\">\n                    {/* <h2>success</h2> */}\n                     {loader ?  <Loader /> : null }   \n                        <h2 className=\"message__success\"  >{success}</h2>\n                        <h2 className=\"message__error\"  >{error}</h2>\n                    </div>\n                    <form onSubmit={submitHandler} >\n                    <TextField\n                    inputRef = {textInput}\n                        multiline={true}\n                        label=\"Message\"\n                        rowsMax={6}\n                        fullWidth={true}\n                        variant=\"filled\"\n                        />\n                    <Button  type=\"submit\" className=\"message__button\" >\n                        send Message\n                    </Button>    \n                    </form>\n                </div>\n                    \n                </Grid>\n                <Hidden smDown>\n                <Grid item xs={12} md={6}>\n                    <img src={hello} />\n                </Grid>\n                </Hidden>\n             \n            </Grid>\n        </div>\n    )\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}